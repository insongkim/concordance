% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concord_uspc_naics.R
\name{concord_uspc_naics}
\alias{concord_uspc_naics}
\title{Converting USPC and NAICS Codes}
\source{
Concordance tables provided by:
\itemize{
  \item United States Patent and Trademark Office <https://www.uspto.gov/web/offices/ac/ido/oeip/taf/naics/doc/naics_info.htm>
}
}
\usage{
concord_uspc_naics(sourcevar, origin, destination, dest.digit = 4, all = FALSE)
}
\arguments{
\item{sourcevar}{An input character vector of USPC or NAICS codes. The function accepts 3-digit codes for USPC (class) and 5 to 11-digit codes for USPC (subclass), and 2 to 4-digit codes for NAICS.}

\item{origin}{A string setting the input industry/patent classification: "USPC" (combined), "USPC2012", "NAICS" (combined), "NAICS2002", "NAICS2007", "NAICS2012", "NAICS2017".}

\item{destination}{A string setting the output industry/patent classification: "USPC" (combined), "USPC2012", "NAICS" (combined), "NAICS2002", "NAICS2007", "NAICS2012", "NAICS2017".}

\item{dest.digit}{An integer indicating the preferred number of digits for output codes. Allows 3 digits for USPC (class) and 5 to 11-digits for USPC (subclass), and 2 to 4-digits for NAICS. The default is 4 digits.}

\item{all}{Either TRUE or FALSE. If TRUE, the function will return (1) all matched outputs for each input, and (2) the share of occurrences for each matched output among all matched outputs. Users can use the shares as weights for more precise concordances. If FALSE, the function will only return the matched output with the largest share of occurrences (the mode match). If the mode consists of multiple matches, the function will return the first matched output.}
}
\value{
The matched output(s) for each element of the input vector. Either a list object when all = TRUE or a character vector when all = FALSE.
}
\description{
Concords the Unites State Patent Classification codes (USPC 2012) to and from NAICS codes (NAICS 2002, NAICS 2007, NAICS 2012, NAICS 2017, NAICS combined).
}
\note{
Always include leading zeros in USPC codes for class, but not subclass (e.g., use 002 for USPC class, instead of 2, but 002/2.11 for USPC subclass)---results may be buggy otherwise.
}
\examples{
# one input: one-to-one match
concord_uspc_naics(sourcevar = "184", 
                   origin = "USPC", destination = "NAICS", 
                   dest.digit = 4, all = FALSE)

concord_uspc_naics(sourcevar = "184",
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = TRUE)

# two inputs: multiple-to-one match
concord_uspc_naics(sourcevar = c("002", "184"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = FALSE)

concord_uspc_naics(sourcevar = c("002", "184"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = TRUE)

# two inputs: repeated
concord_uspc_naics(sourcevar = c("248", "248"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = FALSE)

# one to multiple matches
concord_uspc_naics(sourcevar = c("422/276", "514/928"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = TRUE)

# if no match, will return NA and give warning message
concord_uspc_naics(sourcevar = c("002/2.1", "002/2.2"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 4, all = FALSE)

# 11-digit inputs, 2-digit outputs
concord_uspc_naics(sourcevar = c("015/250.001", "015/250.203"),
                   origin = "USPC", destination = "NAICS",
                   dest.digit = 2, all = FALSE)

# 4-digit inputs, 3-digit outputs
concord_uspc_naics(sourcevar = c("3254", "3259"),
                   origin = "NAICS", destination = "USPC",
                   dest.digit = 3, all = TRUE)
}
